{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"Task1-Connect/","text":"Your first task will log on to remote lab using VPN. At the end of this task, you will have a fully network connectivity to a remote server using Remote Desktop. Step 1: Connect to lab using anyconnect VPN You will connect to remote Lab using Cisco VPN AnyConnect client, as shown in below picture. Launch the Cisco VPN AnyConnect client from your PC Enter dcloud-sjc-anyconnect.cisco.com as the remote server The username and password credentials for this VPN connection will be provided by the lab admin Note: lab admin will furnish the credentials information to each participant. If you don't have this information please ask the lab speakers. Below is an example of user logging into a reference pod: Hit accept when the prompt appears to accept the VPN connection login Note: credentials used in above screenshot are provided as an example only. Credentials for each pod will be provided by the lab speakers. Step 2: RDP to workstation In this step, you will connect to the workstation with Remote Desktop ( RDP ) client on your machines. Use below details for this RDP session: Workstation/Computer : 198.18.133.36 Username : Administrator Password : C1sco12345 Below screenshot is only an example for this RDP connection: Note: above screenshot is provided as an example only. Step 4: MTPutty and Browser Once you have the RDP session to the remote workstation, then you will use MTputty client (pre-installed on the remote workstation) and Chrome Browser to connect to all devices in this lab. MTputty is already installed on the Desktop of the workstation where you connected using RDP. Run this application by clicking on the icon on the desktop:","title":"Remote Connection"},{"location":"Task1-Connect/#step-1-connect-to-lab-using-anyconnect-vpn","text":"You will connect to remote Lab using Cisco VPN AnyConnect client, as shown in below picture. Launch the Cisco VPN AnyConnect client from your PC Enter dcloud-sjc-anyconnect.cisco.com as the remote server The username and password credentials for this VPN connection will be provided by the lab admin Note: lab admin will furnish the credentials information to each participant. If you don't have this information please ask the lab speakers. Below is an example of user logging into a reference pod: Hit accept when the prompt appears to accept the VPN connection login Note: credentials used in above screenshot are provided as an example only. Credentials for each pod will be provided by the lab speakers.","title":"Step 1: Connect to lab using anyconnect VPN"},{"location":"Task1-Connect/#step-2-rdp-to-workstation","text":"In this step, you will connect to the workstation with Remote Desktop ( RDP ) client on your machines. Use below details for this RDP session: Workstation/Computer : 198.18.133.36 Username : Administrator Password : C1sco12345 Below screenshot is only an example for this RDP connection: Note: above screenshot is provided as an example only.","title":"Step 2: RDP to workstation"},{"location":"Task1-Connect/#step-4-mtputty-and-browser","text":"Once you have the RDP session to the remote workstation, then you will use MTputty client (pre-installed on the remote workstation) and Chrome Browser to connect to all devices in this lab. MTputty is already installed on the Desktop of the workstation where you connected using RDP. Run this application by clicking on the icon on the desktop:","title":"Step 4: MTPutty and Browser"},{"location":"Task3-vEdge/","text":"vEdge devices onboarding This task will walk through the steps to verify existing vEdges and add a new vEdge to the SD-WAN environment. Two (2) vEdges have been pre-configured with appropriate configurations. And third (3rd) vEdge will be added to the Fabric in this step. Pre-requisite: SDWAN controllers must be fully operational. If those are not installed (or operational) then please complete the previous Tasks first. Step 1: Verify vEdge in Branch #1 In this step we will SSH to the vEdge in Branch1 and verify that it has established connection to the Control Plane. Launch Mputty application from the Remote desktop by clicking on it's icon on the desktop: Using MPutty on your Remote Desktop session, initiate a SSH session to the BR1-vEdge with IP address of 198.18.134.105 this vEdge ( BR1-vEdge ). You can use credentials of admin and admin for authentication. If prompted for \"Putty Security Alert\" then Trust the host by clicking \"Yes\" on dialog box. The SSH credentials (username and password) are admin and admin respectively Note: if admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 On the SSH connection, execute the below command to view the Out-of-Band (OOB) management VPN 512 related configurations on this vEdge: ~~~ show run vpn 512 ~~~ Below screenshot shows VPN 512 configs: Execute the below command to verify that system related configurations on this vEdge: ~~~ show run system ~~~ As shown in the partial output in the below screenshot, the vEdge has been pre-configured with below system related configurations: hostname system-id site-id organization name * vBond DNS name of vbond.cisco.com Note: A static DNS entry for the hostname vbond.cisco.com has been configured under vpn 0 (it will be visible in subsequent bullet) Execute the below command to see the configuration related to WAN connections or Transport connections on this vEdge. In Cisco SD-WAN, VPN 0 is allocated for Transport/WAN links: ~~~ show run vpn 0 ~~~ Below screenshot shows the partial output of this command. This command will confirm that: vEdge has two WAN links (under VPN 0) as per interface ge0/0 & ge0/2 configurations, default routes are configured for both links, * Each WAN link is also configured with appropriate color tag: Note: this color tag is used to set up the appropriate IPSec tunnels. With restrict option, IPSec tunnels between vEdges that have MPLS color will be created. You many also execute show run command to view the full configuration of this vEdge Run the below commands to verify that certificate has been installed and view the details of certificate respectively ~~~ show certificate serial show certificate installed ~~~ Below screenshot shows the partial output of the above command. Note that Issuer of the certificate is vManage Run the below command to see the list of control connections of this vEdge to the Control Plane (vManage, vSmart) ~~~ show control connections ~~~ Below screenshot shows the output of this command. Note it validates that vEdge has: Two (2) control connections established to vSmart Controller One (1) control connection established to vManage In addition to option of configuring a vEdge using local CLI, centralized configuration/management of vEdges can be done from the vManage using \"CLI Template\" or \"Feature Template\". In this lab, \"CLI Template\" has already been configured for BR1-vEdge2 (i.e. vEdge in Branch-1). Hence this vEdge is managed/provisioned centrally via vManage. On the Mputty client with SSH session to BR1-vEdge verify that template is successfully attached by running below command : ~~~ show system status ~~~ The output of above command should show that it is is centrally configured by vManage and also provides the name of Template: vManaged: true Configuration template: CL-branch-1-vedge Below screenshot shows the partial output of above command: Note: you can also verify the Mode (vManaged or CLI) on vManage GUI by navigating to Configuration > Devices and under WAN Edge List tab scrolling to the right will show the Mode option for each device. If there are any discrepancies then refer to the instructor. Step 2: Add a new vEdge in Branch #2 In this step, we will add a vEdge-Cloud in Branch number 2 to the SD-WAN Fabric. The vEdge has already been configured for the Out-of-Band Management (i.e. VPN 512) so there is network connectivity to this vEdge Important Note : Be very careful in making configuration changes on vEdge. Do NOT change any configuration of VPN 512 as it can result in loss of connectivity to the vEdge - which can not be restored. You will have to start the lab again from Task #1 if you loose network connectivity to a vEdge. Log on to the vManage GUI using a web browser (if not already open) and use credentials of admin and admin for authentication: ~~~ https://198.18.1.10 ~~~ On the vManage GUI , navigate to Configuration > Devices > WAN Edge List . Here you will see a WAN Edge device with Chassis Number of ddd801b2-8cbe-4394-abd1-3b71e39886e3 . This vEdge will be configured as a WAN Edge for Branch #2. Then Click the three dots ... on the right side of this vEdge (with Chassis Number of ddd801b2-8cbe-4394-abd1-3b71e39886e3) and Click Generate Bootstrap Configuration as shown in the below screenshot: This will result in generation of a new One-Time-Password (OTP) as shown in below screenshot. Copy the otp and uuid fields from this pop-up window. Note : A new OTP is generated everytime. Hence the OTP data on your pop-up window will not be the same as above screenshot Click on the Close button of this pop-up window to proceed further Using MPutty on your Remote Desktop session, initiate a SSH session to the IP address of 198.18.134.106 this vEdge ( BR2-vEdge1 ). You can use credentials of admin and admin for authentication. Note: if admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 As mentioned earlier the OOB management (VPN 512) has been already configured on this vEdge. On the SSH connection of vEdge: configure the below commands - you can copy and paste the below: ~~~ conf t system host-name BR2-vEdge gps-location latitude 32.79 gps-location longitude -96.77 system-ip 10.4.0.1 site-id 400 organization-name \"Cisco Sy1 - 19968\" vbond vbond.cisco.com vpn 0 host vbond.cisco.com ip 198.18.1.11 interface ge0/1 ip address 172.16.4.2/30 tunnel-interface encapsulation ipsec color mpls restrict no allow-service bgp allow-service dhcp allow-service dns allow-service icmp no allow-service sshd no allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! ip route 0.0.0.0/0 172.16.4.1 ! commit ~~~ Make sure the commit is done successfully on the vEdge On the SSH connection to vEdge: execute the below command: > Note: you must replace the {otp} with the OTP that you copied in previous step of Generate Bootstrap Configuration ~~~ request vedge-cloud activate chassis-number ddd801b2-8cbe-4394-abd1-3b71e39886e3 token token {otp} ~~~ Below screenshot gives an example of executing this command: On the SSH connection to vEdge, execute the below command to verify that a valid serial number is generated ~~~ show certificate serial ~~~ Below screenshot shows the output of above command confirming that a valid serial is now installed on vEdge: Note: If the output of above command does not show any serial number, or it gives a message such as ' Certificate not yet installed ... giving up ' then you can re-enter the above request vedge-cloud activate chassis-number ddd801b2-8cbe-4394-abd1-3b71e39886e3 token token {otp} command On the SSH connection to vEdge: execute the below commands to verify control plane connectivity of this vEdge to the controllers (vManage, vSmart) ~~~ show control connections ~~~ Below screenshot shows the output of above command: From the above output you can: confirm that State of control plane connection to vManage is up confirm that State of control plane connections to vSmart are up confirm that valid Private, Public, System IP addresses, Protcols etc of vSmart, vManage and vEdge are shown Note : If the State of any control connection is down , then you can try to issue clear control connections command. And check the status again. If still there are issues then kindly check with Lab instructor. Step 3: Add a CLI Template for vEdge in Branch #2 Next a CLI Template will be added so future configurations of vEdge in Branch number 2 will be done via vManage directly. These configurations will be done by using \"CLI Template\" from the vManage. Use of \"Feature Templates\" on vManage is an alternate mechanism for centralization configurations from vManage, but it will not be used in this lab. Important Note : Be very careful in making configuration changes on vEdge. Do NOT change any configuration of VPN 512 as it can result in loss of connectivity to the vEdge - which can not be restored. You will have to start the lab again from Task #1 if you loose network connectivity to a vEdge. On the vManage GUI, navigate to Configuration > Templates . Under Devices tab click Create Template and then select CLI Template as shown in the below screenshot: Next, from the Device Model dropdown menu select vEdge-Cloud Enter Template Name of CL-BR2-vEdge1 Enter Description of Branch2 vEdge1 configs In the CLI Configuration section copy and paste the below configs: ~~~ system host-name BR2-vEdge gps-location latitude 32.79 gps-location longitude -96.77 system-ip 10.4.0.1 site-id 400 admin-tech-on-failure no route-consistency-check organization-name \"Cisco Sy1 - 19968\" vbond vbond.cisco.com aaa auth-order local radius tacacs usergroup basic task system read write task interface read write ! usergroup netadmin ! usergroup operator task system read task interface read task policy read task routing read task security read ! user admin password $6$lPLCwCRM7wIvWHOC$RDd/8AuSZF5MQkxoNlw1na0Fu.flcraw3Cktj66fs5K6TUnaU0lLypchwObzT74byny4jVe7WIyUKZzeciifl. ! user cisco password cisco description cisco group netadmin ! user cisco1 password cisco1 description cisco1 group netadmin ! ! logging disk enable ! ! ! bfd app-route poll-interval 5000 omp no shutdown ecmp-limit 8 graceful-restart advertise connected advertise static ! security ipsec authentication-type ah-sha1-hmac sha1-hmac ! ! snmp no shutdown view ALL oid 1.3.6.1 ! community public view ALL authorization read-only ! ! banner login \"CL SDWAN - Branch2 vEdge\" ! vpn 0 dns 198.18.1.1 secondary dns 198.18.1.254 primary host vbond.cisco.com ip 198.18.1.11 interface ge0/0 ip dhcp-client tunnel-interface encapsulation ipsec color private1 no allow-service bgp allow-service dhcp allow-service dns allow-service icmp no allow-service sshd no allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! interface ge0/1 ip address 172.16.4.2/30 tunnel-interface encapsulation ipsec color mpls restrict no allow-service bgp allow-service dhcp allow-service dns allow-service icmp no allow-service sshd no allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! ip route 0.0.0.0/0 172.16.4.1 ! vpn 512 interface eth0 ip address 198.18.134.106/18 no shutdown ! ip route 0.0.0.0/0 198.18.128.1 ! ~~~ Next Click the Add button at the bottom of page as shown in the below screenshot: On the next screen, verify that this Template has been added successfully Now let's attach vEdge in Branch 2 to this newly created CLI Template to appropriate. On the vManage GUI, Configuration > Templates section: Click on the newly created Template named: CL-BR2-vEdge1 Then Click the three dots ... on the right side of this Template and Select Attach Devices option from the drop down menu as shown in the below screenshot: On the Attach Devices window: Under the Available Devices tab, Click on BR2-vEdge (with Device IP of 10.4.0.1 ) Click on the Right Arrow icon as shown in below screenshot. At this point the vEdge should move to the Selected Devices tab Click on the Attach button as shown in below screenshot On the next screen, Click on BR2-vEdge (with uuid of ddd801b2-8cbe-4394-abd1-3b71e39886e3 ) on left section and Click on Config Preview and Config Diff options on the right side of window to confirm correct configurations are pushed to this BR2-vEdge1. Below screenshot shows \"Config Preview\" confirming that correct VPN 512 configs are being pushed to BR2-vEdge: Next Click on the Configure Devices button on bottom of the screen. On the subsequent screen verify that the template is attached successfully to BR2-vEdge From the Mputty client initiate SSH session to BR2-vEdge and verify that template is successfully attached by issuing below command: ~~~ show system status ~~~ The output of above command should show: vManaged = true Configuration template: CL-BR2-vEdge1 Below screenshot shows the output of above command confirming that template is attached successfully: Note: you can verify the Mode (vManaged or CLI) on vManage GUI by navigating to Configuration > Devices . Then under WAN Edge List tab scroll to the right you can view the Mode option for each device. On the SSH connection, you can execute below commands to verify the updated configurations (such as DHCP on interface ge0/0, control connections to Controllers on this new interface etc) as reflected in \"CLI Template\": ~~~ show dhcp interface show interface show ip route show control connections show run ~~~ Step 4: Add CLI Template for vEdge in Data Center (DC) Next a CLI Template will be added so future configurations of vEdge in Branch number 2 will be done via vManage directly. These configurations will be done by using \"CLI Template\" from the vManage. Use of \"Feature Templates\" on vManage is an alternate mechanism for centralization configurations from vManage, but it will not be used in this lab. Important Note : Be very careful in making configuration changes on vEdge. Do NOT change any configuration of VPN 512 as it can result in loss of connectivity to the vEdge - which can not be restored. You will have to start the lab again from Task #1 if you loose network connectivity to a vEdge. On the vManage GUI, navigate to Configuration > Templates . Under Devices tab click Create Template and then select CLI Template as shown in the below screenshot: Next, from the Device Model dropdown menu select vEdge-Cloud Enter Template Name of CL-DC-vEdge Enter Description of DC vEdge1 In the CLI Configuration section copy and paste the below configs: system host-name DC1-VEDGE1 gps-location latitude 37.33 gps-location longitude -121.88 system-ip 10.1.0.1 site-id 100 admin-tech-on-failure no route-consistency-check sp-organization-name \"Cisco Sy1 - 19968\" organization-name \"Cisco Sy1 - 19968\" upgrade-confirm 15 vbond vbond.cisco.com aaa auth-order local radius tacacs usergroup basic task system read write task interface read write ! usergroup netadmin ! usergroup operator task system read task interface read task policy read task routing read task security read ! user admin password $6$siwKBQ==$wT2lUa9BSreDPI6gB8sl4E6PAJoVXgMbgv/whJ8F1C6sWdRazdxorYYTLrL6syiG6qnLABTnrE96HJiKF6QRq1 ! user cisco password cisco description cisco group netadmin ! user cisco1 password cisco1 description cisco1 group netadmin ! ! logging disk enable ! ! ! bfd app-route poll-interval 5000 omp no shutdown ecmp-limit 8 graceful-restart advertise connected advertise static ! security ipsec authentication-type sha1-hmac ah-sha1-hmac ! ! snmp no shutdown view public oid 1.3.6.1 ! ! banner login \"CL SDWAN - DC1-vEdge1\" ! vpn 0 dns 198.18.1.1 secondary dns 198.18.1.254 primary host vbond.cisco.com ip {{vbond-public-ip}} interface ge0/1 ip address 172.16.10.2/30 tunnel-interface encapsulation ipsec color mpls restrict max-control-connections 0 no allow-service bgp allow-service dhcp allow-service dns allow-service icmp no allow-service sshd no allow-service netconf allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! interface ge0/2 ip address 172.16.11.2/30 tunnel-interface encapsulation ipsec color private1 allow-service all no allow-service bgp allow-service dhcp allow-service dns allow-service icmp no allow-service sshd no allow-service netconf allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! ip route 0.0.0.0/0 172.16.10.1 ip route 0.0.0.0/0 172.16.11.1 ! ! vpn 512 interface eth0 ip address 198.18.134.100/18 no shutdown ! ip route 0.0.0.0/0 198.18.128.1 ! Note: Double curly brackets with {{vbond-public-ip}} must be entered as above. Double curly brackets are interpreted as a variable by vManage and the appropirate IP address of vbond for your pod must be configured in subsequent bullets Next Click the Add button as shown in the below screenshot: On the screen, verify that this Template has been added successfully Now let's attach vEdge in DC to this newly created CLI Template to appropriate. On the vManage GUI, Configuration > Templates section: Click on the newly created Template named: CL-DC-vEdge Then Click the three dots ... on the right side of this Template and Select Attach Devices option from the drop down menu as shown in the below screenshot: On the Attach Devices window: Under the Available Devices tab, Click on DC1-VEDGE1 (with Device IP of 10.1.0.1 ) Click on the Right Arrow icon as shown in below screenshot. At this point the vEdge should move to the Selected Devices tab Click on the Attach button as shown in below screenshot On the next screen, Enter the Public IP address of vBond in your specific pod in the field named vbond-public-ip . Click on the Next button Note: it's important to enter the respective Public IP address of vBond of your pod in this field. You may ask instructor if you are unsure about this: Below screenshot shows this for one of the reference pod: On the next screen, Click on DC1-VEDGE1 (with uuid of ebdc8bd9-17e5-4eb3-a5e0-f438403a83de ) on left section and Click on Config Preview and Config Diff options on the right side of window to confirm correct configurations are pushed to this DC1-VEDGE1. Below screenshot shows \"Config Preview\" confirming that correct VPN 512 configs are being pushed to DC1-VEDGE1: Important Note : Be very careful in making configuration changes on vEdge. Do NOT change any configuration of VPN 512 as it can result in loss of connectivity to the vEdge - which can not be restored. You will have to start the lab again from Task #1 if you loose network connectivity to a vEdge. Next Click on the Configure Devices button on bottom of the screen. On the subsequent screen verify that the template is attached successfully to DC1-vEdge Note : you may get a message that Device is offline. You can ignore this for now and proceed further Step 5: Verify vEdge in Data Center (DC) DC1-vEdge may not be successfully registered to control plane device due to incorrect Public IP address. Hence in execution of last bullet in the previous step the \"Device is offline\" message may be shown by vManage. You can go through below steps to bring it online and/or to verify that it is registered to controllers: On the Mputty client in your Remote desktop, initiate a SSH session to DC1-VEDGE1 with OOB management IP address of 198.18.134.100 and use credentials of admin/admin Note: if admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 DC1-vEdge may not be successfully registered to control plane device due to incorrect Public IP address. On the SSH connection, execute the below commands to verify it's status of control connections: ~~~ clear control connections show control connections ~~~ Wait for few seconds and execute below command multiple times to check the control status: ~~~ show control connections ~~~ If the output shows that vEdge control State is connect for vBond then execute the below commands after the {PUBLIC IP of vBOND} with the actual Public IP address of vBond in your pod: ~~~ conf t vpn 0 host vbond.cisco.com ip {PUBLIC IP of vBOND} commit ~~~ Note: you must replace with actual {PUBLIC IP of vBOND} with the actual Public IP address of vBond such as this command: host vbond.cisco.com ip 128.107.222.47 Make sure that commit is done successfully on vEdge. You can then execute below commands : ~~~ clear control connections show control connections ~~~ Wait for few seconds and execute below command multiple times to check the status of control plane connections: ~~~ show control connections ~~~ Below screenshot shows the working state of this vEdge: Note: above screenshot shows the Public IP address of the vBond for a reference pod. It will be different for your pod. The Private IP addresses for vManage and vSmart should be same. Note: that DC-vEdge will have only one (1) control connnection (as shown by show control connections command) over private1 color to vSmart, vBond and vManage. This is expected as control connection to vBond Public IP address is allowed only on the private1 link. As per previous bullet control connections to vManage should be up. To verify that CLI template (configured in previous steps) is successfully attached to this vEdge you may issue below command: ~~~ show system status ~~~ The output of above command should show (at the end): vManaged = true Configuration template: CL-DC-vEdge Below screenshot shows the output of above command: Note: you can verify the Mode (vManaged or CLI) on vManage GUI by navigating to Configuration > Devices and under WAN Edge List tab scrolling to the right will show the Mode option for each device. You can run various other commands to verify the updated configurations (such as DHCP on interface ge0/0, control connections to Controllers on this new interface etc) as reflected in \"CLI Template\": ~~~ show interface show ip route show control connections show run ~~~ -- This concludes the process to onboard the three (3) vEdge-Cloud devices in SDWAN Fabric","title":"vEdge Onboarding"},{"location":"Task3-vEdge/#vedge-devices-onboarding","text":"This task will walk through the steps to verify existing vEdges and add a new vEdge to the SD-WAN environment. Two (2) vEdges have been pre-configured with appropriate configurations. And third (3rd) vEdge will be added to the Fabric in this step. Pre-requisite: SDWAN controllers must be fully operational. If those are not installed (or operational) then please complete the previous Tasks first.","title":"vEdge devices onboarding"},{"location":"Task3-vEdge/#step-1-verify-vedge-in-branch-1","text":"In this step we will SSH to the vEdge in Branch1 and verify that it has established connection to the Control Plane. Launch Mputty application from the Remote desktop by clicking on it's icon on the desktop: Using MPutty on your Remote Desktop session, initiate a SSH session to the BR1-vEdge with IP address of 198.18.134.105 this vEdge ( BR1-vEdge ). You can use credentials of admin and admin for authentication. If prompted for \"Putty Security Alert\" then Trust the host by clicking \"Yes\" on dialog box. The SSH credentials (username and password) are admin and admin respectively Note: if admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 On the SSH connection, execute the below command to view the Out-of-Band (OOB) management VPN 512 related configurations on this vEdge: ~~~ show run vpn 512 ~~~ Below screenshot shows VPN 512 configs: Execute the below command to verify that system related configurations on this vEdge: ~~~ show run system ~~~ As shown in the partial output in the below screenshot, the vEdge has been pre-configured with below system related configurations: hostname system-id site-id organization name * vBond DNS name of vbond.cisco.com Note: A static DNS entry for the hostname vbond.cisco.com has been configured under vpn 0 (it will be visible in subsequent bullet) Execute the below command to see the configuration related to WAN connections or Transport connections on this vEdge. In Cisco SD-WAN, VPN 0 is allocated for Transport/WAN links: ~~~ show run vpn 0 ~~~ Below screenshot shows the partial output of this command. This command will confirm that: vEdge has two WAN links (under VPN 0) as per interface ge0/0 & ge0/2 configurations, default routes are configured for both links, * Each WAN link is also configured with appropriate color tag: Note: this color tag is used to set up the appropriate IPSec tunnels. With restrict option, IPSec tunnels between vEdges that have MPLS color will be created. You many also execute show run command to view the full configuration of this vEdge Run the below commands to verify that certificate has been installed and view the details of certificate respectively ~~~ show certificate serial show certificate installed ~~~ Below screenshot shows the partial output of the above command. Note that Issuer of the certificate is vManage Run the below command to see the list of control connections of this vEdge to the Control Plane (vManage, vSmart) ~~~ show control connections ~~~ Below screenshot shows the output of this command. Note it validates that vEdge has: Two (2) control connections established to vSmart Controller One (1) control connection established to vManage In addition to option of configuring a vEdge using local CLI, centralized configuration/management of vEdges can be done from the vManage using \"CLI Template\" or \"Feature Template\". In this lab, \"CLI Template\" has already been configured for BR1-vEdge2 (i.e. vEdge in Branch-1). Hence this vEdge is managed/provisioned centrally via vManage. On the Mputty client with SSH session to BR1-vEdge verify that template is successfully attached by running below command : ~~~ show system status ~~~ The output of above command should show that it is is centrally configured by vManage and also provides the name of Template: vManaged: true Configuration template: CL-branch-1-vedge Below screenshot shows the partial output of above command: Note: you can also verify the Mode (vManaged or CLI) on vManage GUI by navigating to Configuration > Devices and under WAN Edge List tab scrolling to the right will show the Mode option for each device. If there are any discrepancies then refer to the instructor.","title":"Step 1: Verify vEdge in Branch #1"},{"location":"Task3-vEdge/#step-2-add-a-new-vedge-in-branch-2","text":"In this step, we will add a vEdge-Cloud in Branch number 2 to the SD-WAN Fabric. The vEdge has already been configured for the Out-of-Band Management (i.e. VPN 512) so there is network connectivity to this vEdge Important Note : Be very careful in making configuration changes on vEdge. Do NOT change any configuration of VPN 512 as it can result in loss of connectivity to the vEdge - which can not be restored. You will have to start the lab again from Task #1 if you loose network connectivity to a vEdge. Log on to the vManage GUI using a web browser (if not already open) and use credentials of admin and admin for authentication: ~~~ https://198.18.1.10 ~~~ On the vManage GUI , navigate to Configuration > Devices > WAN Edge List . Here you will see a WAN Edge device with Chassis Number of ddd801b2-8cbe-4394-abd1-3b71e39886e3 . This vEdge will be configured as a WAN Edge for Branch #2. Then Click the three dots ... on the right side of this vEdge (with Chassis Number of ddd801b2-8cbe-4394-abd1-3b71e39886e3) and Click Generate Bootstrap Configuration as shown in the below screenshot: This will result in generation of a new One-Time-Password (OTP) as shown in below screenshot. Copy the otp and uuid fields from this pop-up window. Note : A new OTP is generated everytime. Hence the OTP data on your pop-up window will not be the same as above screenshot Click on the Close button of this pop-up window to proceed further Using MPutty on your Remote Desktop session, initiate a SSH session to the IP address of 198.18.134.106 this vEdge ( BR2-vEdge1 ). You can use credentials of admin and admin for authentication. Note: if admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 As mentioned earlier the OOB management (VPN 512) has been already configured on this vEdge. On the SSH connection of vEdge: configure the below commands - you can copy and paste the below: ~~~ conf t system host-name BR2-vEdge gps-location latitude 32.79 gps-location longitude -96.77 system-ip 10.4.0.1 site-id 400 organization-name \"Cisco Sy1 - 19968\" vbond vbond.cisco.com vpn 0 host vbond.cisco.com ip 198.18.1.11 interface ge0/1 ip address 172.16.4.2/30 tunnel-interface encapsulation ipsec color mpls restrict no allow-service bgp allow-service dhcp allow-service dns allow-service icmp no allow-service sshd no allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! ip route 0.0.0.0/0 172.16.4.1 ! commit ~~~ Make sure the commit is done successfully on the vEdge On the SSH connection to vEdge: execute the below command: > Note: you must replace the {otp} with the OTP that you copied in previous step of Generate Bootstrap Configuration ~~~ request vedge-cloud activate chassis-number ddd801b2-8cbe-4394-abd1-3b71e39886e3 token token {otp} ~~~ Below screenshot gives an example of executing this command: On the SSH connection to vEdge, execute the below command to verify that a valid serial number is generated ~~~ show certificate serial ~~~ Below screenshot shows the output of above command confirming that a valid serial is now installed on vEdge: Note: If the output of above command does not show any serial number, or it gives a message such as ' Certificate not yet installed ... giving up ' then you can re-enter the above request vedge-cloud activate chassis-number ddd801b2-8cbe-4394-abd1-3b71e39886e3 token token {otp} command On the SSH connection to vEdge: execute the below commands to verify control plane connectivity of this vEdge to the controllers (vManage, vSmart) ~~~ show control connections ~~~ Below screenshot shows the output of above command: From the above output you can: confirm that State of control plane connection to vManage is up confirm that State of control plane connections to vSmart are up confirm that valid Private, Public, System IP addresses, Protcols etc of vSmart, vManage and vEdge are shown Note : If the State of any control connection is down , then you can try to issue clear control connections command. And check the status again. If still there are issues then kindly check with Lab instructor.","title":"Step 2: Add a new vEdge in Branch #2"},{"location":"Task3-vEdge/#step-3-add-a-cli-template-for-vedge-in-branch-2","text":"Next a CLI Template will be added so future configurations of vEdge in Branch number 2 will be done via vManage directly. These configurations will be done by using \"CLI Template\" from the vManage. Use of \"Feature Templates\" on vManage is an alternate mechanism for centralization configurations from vManage, but it will not be used in this lab. Important Note : Be very careful in making configuration changes on vEdge. Do NOT change any configuration of VPN 512 as it can result in loss of connectivity to the vEdge - which can not be restored. You will have to start the lab again from Task #1 if you loose network connectivity to a vEdge. On the vManage GUI, navigate to Configuration > Templates . Under Devices tab click Create Template and then select CLI Template as shown in the below screenshot: Next, from the Device Model dropdown menu select vEdge-Cloud Enter Template Name of CL-BR2-vEdge1 Enter Description of Branch2 vEdge1 configs In the CLI Configuration section copy and paste the below configs: ~~~ system host-name BR2-vEdge gps-location latitude 32.79 gps-location longitude -96.77 system-ip 10.4.0.1 site-id 400 admin-tech-on-failure no route-consistency-check organization-name \"Cisco Sy1 - 19968\" vbond vbond.cisco.com aaa auth-order local radius tacacs usergroup basic task system read write task interface read write ! usergroup netadmin ! usergroup operator task system read task interface read task policy read task routing read task security read ! user admin password $6$lPLCwCRM7wIvWHOC$RDd/8AuSZF5MQkxoNlw1na0Fu.flcraw3Cktj66fs5K6TUnaU0lLypchwObzT74byny4jVe7WIyUKZzeciifl. ! user cisco password cisco description cisco group netadmin ! user cisco1 password cisco1 description cisco1 group netadmin ! ! logging disk enable ! ! ! bfd app-route poll-interval 5000 omp no shutdown ecmp-limit 8 graceful-restart advertise connected advertise static ! security ipsec authentication-type ah-sha1-hmac sha1-hmac ! ! snmp no shutdown view ALL oid 1.3.6.1 ! community public view ALL authorization read-only ! ! banner login \"CL SDWAN - Branch2 vEdge\" ! vpn 0 dns 198.18.1.1 secondary dns 198.18.1.254 primary host vbond.cisco.com ip 198.18.1.11 interface ge0/0 ip dhcp-client tunnel-interface encapsulation ipsec color private1 no allow-service bgp allow-service dhcp allow-service dns allow-service icmp no allow-service sshd no allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! interface ge0/1 ip address 172.16.4.2/30 tunnel-interface encapsulation ipsec color mpls restrict no allow-service bgp allow-service dhcp allow-service dns allow-service icmp no allow-service sshd no allow-service netconf no allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! ip route 0.0.0.0/0 172.16.4.1 ! vpn 512 interface eth0 ip address 198.18.134.106/18 no shutdown ! ip route 0.0.0.0/0 198.18.128.1 ! ~~~ Next Click the Add button at the bottom of page as shown in the below screenshot: On the next screen, verify that this Template has been added successfully Now let's attach vEdge in Branch 2 to this newly created CLI Template to appropriate. On the vManage GUI, Configuration > Templates section: Click on the newly created Template named: CL-BR2-vEdge1 Then Click the three dots ... on the right side of this Template and Select Attach Devices option from the drop down menu as shown in the below screenshot: On the Attach Devices window: Under the Available Devices tab, Click on BR2-vEdge (with Device IP of 10.4.0.1 ) Click on the Right Arrow icon as shown in below screenshot. At this point the vEdge should move to the Selected Devices tab Click on the Attach button as shown in below screenshot On the next screen, Click on BR2-vEdge (with uuid of ddd801b2-8cbe-4394-abd1-3b71e39886e3 ) on left section and Click on Config Preview and Config Diff options on the right side of window to confirm correct configurations are pushed to this BR2-vEdge1. Below screenshot shows \"Config Preview\" confirming that correct VPN 512 configs are being pushed to BR2-vEdge: Next Click on the Configure Devices button on bottom of the screen. On the subsequent screen verify that the template is attached successfully to BR2-vEdge From the Mputty client initiate SSH session to BR2-vEdge and verify that template is successfully attached by issuing below command: ~~~ show system status ~~~ The output of above command should show: vManaged = true Configuration template: CL-BR2-vEdge1 Below screenshot shows the output of above command confirming that template is attached successfully: Note: you can verify the Mode (vManaged or CLI) on vManage GUI by navigating to Configuration > Devices . Then under WAN Edge List tab scroll to the right you can view the Mode option for each device. On the SSH connection, you can execute below commands to verify the updated configurations (such as DHCP on interface ge0/0, control connections to Controllers on this new interface etc) as reflected in \"CLI Template\": ~~~ show dhcp interface show interface show ip route show control connections show run ~~~","title":"Step 3: Add a CLI Template for vEdge in Branch #2"},{"location":"Task3-vEdge/#step-4-add-cli-template-for-vedge-in-data-center-dc","text":"Next a CLI Template will be added so future configurations of vEdge in Branch number 2 will be done via vManage directly. These configurations will be done by using \"CLI Template\" from the vManage. Use of \"Feature Templates\" on vManage is an alternate mechanism for centralization configurations from vManage, but it will not be used in this lab. Important Note : Be very careful in making configuration changes on vEdge. Do NOT change any configuration of VPN 512 as it can result in loss of connectivity to the vEdge - which can not be restored. You will have to start the lab again from Task #1 if you loose network connectivity to a vEdge. On the vManage GUI, navigate to Configuration > Templates . Under Devices tab click Create Template and then select CLI Template as shown in the below screenshot: Next, from the Device Model dropdown menu select vEdge-Cloud Enter Template Name of CL-DC-vEdge Enter Description of DC vEdge1 In the CLI Configuration section copy and paste the below configs: system host-name DC1-VEDGE1 gps-location latitude 37.33 gps-location longitude -121.88 system-ip 10.1.0.1 site-id 100 admin-tech-on-failure no route-consistency-check sp-organization-name \"Cisco Sy1 - 19968\" organization-name \"Cisco Sy1 - 19968\" upgrade-confirm 15 vbond vbond.cisco.com aaa auth-order local radius tacacs usergroup basic task system read write task interface read write ! usergroup netadmin ! usergroup operator task system read task interface read task policy read task routing read task security read ! user admin password $6$siwKBQ==$wT2lUa9BSreDPI6gB8sl4E6PAJoVXgMbgv/whJ8F1C6sWdRazdxorYYTLrL6syiG6qnLABTnrE96HJiKF6QRq1 ! user cisco password cisco description cisco group netadmin ! user cisco1 password cisco1 description cisco1 group netadmin ! ! logging disk enable ! ! ! bfd app-route poll-interval 5000 omp no shutdown ecmp-limit 8 graceful-restart advertise connected advertise static ! security ipsec authentication-type sha1-hmac ah-sha1-hmac ! ! snmp no shutdown view public oid 1.3.6.1 ! ! banner login \"CL SDWAN - DC1-vEdge1\" ! vpn 0 dns 198.18.1.1 secondary dns 198.18.1.254 primary host vbond.cisco.com ip {{vbond-public-ip}} interface ge0/1 ip address 172.16.10.2/30 tunnel-interface encapsulation ipsec color mpls restrict max-control-connections 0 no allow-service bgp allow-service dhcp allow-service dns allow-service icmp no allow-service sshd no allow-service netconf allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! interface ge0/2 ip address 172.16.11.2/30 tunnel-interface encapsulation ipsec color private1 allow-service all no allow-service bgp allow-service dhcp allow-service dns allow-service icmp no allow-service sshd no allow-service netconf allow-service ntp no allow-service ospf no allow-service stun allow-service https ! no shutdown ! ip route 0.0.0.0/0 172.16.10.1 ip route 0.0.0.0/0 172.16.11.1 ! ! vpn 512 interface eth0 ip address 198.18.134.100/18 no shutdown ! ip route 0.0.0.0/0 198.18.128.1 ! Note: Double curly brackets with {{vbond-public-ip}} must be entered as above. Double curly brackets are interpreted as a variable by vManage and the appropirate IP address of vbond for your pod must be configured in subsequent bullets Next Click the Add button as shown in the below screenshot: On the screen, verify that this Template has been added successfully Now let's attach vEdge in DC to this newly created CLI Template to appropriate. On the vManage GUI, Configuration > Templates section: Click on the newly created Template named: CL-DC-vEdge Then Click the three dots ... on the right side of this Template and Select Attach Devices option from the drop down menu as shown in the below screenshot: On the Attach Devices window: Under the Available Devices tab, Click on DC1-VEDGE1 (with Device IP of 10.1.0.1 ) Click on the Right Arrow icon as shown in below screenshot. At this point the vEdge should move to the Selected Devices tab Click on the Attach button as shown in below screenshot On the next screen, Enter the Public IP address of vBond in your specific pod in the field named vbond-public-ip . Click on the Next button Note: it's important to enter the respective Public IP address of vBond of your pod in this field. You may ask instructor if you are unsure about this: Below screenshot shows this for one of the reference pod: On the next screen, Click on DC1-VEDGE1 (with uuid of ebdc8bd9-17e5-4eb3-a5e0-f438403a83de ) on left section and Click on Config Preview and Config Diff options on the right side of window to confirm correct configurations are pushed to this DC1-VEDGE1. Below screenshot shows \"Config Preview\" confirming that correct VPN 512 configs are being pushed to DC1-VEDGE1: Important Note : Be very careful in making configuration changes on vEdge. Do NOT change any configuration of VPN 512 as it can result in loss of connectivity to the vEdge - which can not be restored. You will have to start the lab again from Task #1 if you loose network connectivity to a vEdge. Next Click on the Configure Devices button on bottom of the screen. On the subsequent screen verify that the template is attached successfully to DC1-vEdge Note : you may get a message that Device is offline. You can ignore this for now and proceed further","title":"Step 4: Add CLI Template for vEdge in Data Center (DC)"},{"location":"Task3-vEdge/#step-5-verify-vedge-in-data-center-dc","text":"DC1-vEdge may not be successfully registered to control plane device due to incorrect Public IP address. Hence in execution of last bullet in the previous step the \"Device is offline\" message may be shown by vManage. You can go through below steps to bring it online and/or to verify that it is registered to controllers: On the Mputty client in your Remote desktop, initiate a SSH session to DC1-VEDGE1 with OOB management IP address of 198.18.134.100 and use credentials of admin/admin Note: if admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 DC1-vEdge may not be successfully registered to control plane device due to incorrect Public IP address. On the SSH connection, execute the below commands to verify it's status of control connections: ~~~ clear control connections show control connections ~~~ Wait for few seconds and execute below command multiple times to check the control status: ~~~ show control connections ~~~ If the output shows that vEdge control State is connect for vBond then execute the below commands after the {PUBLIC IP of vBOND} with the actual Public IP address of vBond in your pod: ~~~ conf t vpn 0 host vbond.cisco.com ip {PUBLIC IP of vBOND} commit ~~~ Note: you must replace with actual {PUBLIC IP of vBOND} with the actual Public IP address of vBond such as this command: host vbond.cisco.com ip 128.107.222.47 Make sure that commit is done successfully on vEdge. You can then execute below commands : ~~~ clear control connections show control connections ~~~ Wait for few seconds and execute below command multiple times to check the status of control plane connections: ~~~ show control connections ~~~ Below screenshot shows the working state of this vEdge: Note: above screenshot shows the Public IP address of the vBond for a reference pod. It will be different for your pod. The Private IP addresses for vManage and vSmart should be same. Note: that DC-vEdge will have only one (1) control connnection (as shown by show control connections command) over private1 color to vSmart, vBond and vManage. This is expected as control connection to vBond Public IP address is allowed only on the private1 link. As per previous bullet control connections to vManage should be up. To verify that CLI template (configured in previous steps) is successfully attached to this vEdge you may issue below command: ~~~ show system status ~~~ The output of above command should show (at the end): vManaged = true Configuration template: CL-DC-vEdge Below screenshot shows the output of above command: Note: you can verify the Mode (vManaged or CLI) on vManage GUI by navigating to Configuration > Devices and under WAN Edge List tab scrolling to the right will show the Mode option for each device. You can run various other commands to verify the updated configurations (such as DHCP on interface ge0/0, control connections to Controllers on this new interface etc) as reflected in \"CLI Template\": ~~~ show interface show ip route show control connections show run ~~~ -- This concludes the process to onboard the three (3) vEdge-Cloud devices in SDWAN Fabric","title":"Step 5: Verify vEdge in Data Center (DC)"},{"location":"Task4-Full-Mesh/","text":"Task 4 - Full Mesh This task will walk through the steps to verify the full mesh VPN topology on the SD-WAN Fabric. As per previous steps of onboarding the vEdges has been performed. By default all the vEdges in SD-WAN Fabric will create a full mesh IPSec tunnels. Pre-requisite: SDWAN controllers and 3 vEdges (in Branches & DC) must be fully operational. If those are not installed (or not operational) then please complete the previous Tasks first. Step 1: Verify IPSec tunnels on BR1 You can launch SSH to vEdge in Branch-1 by using MPutty client on the Remote Desktop: SSH to OOB Management IP address of BR1-vEdge : 198.18.134.105 Use credentials of admin and admin for authentication Note: if admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 On the SSH connection to vEdge, execute the below commands to verify that OMP routes have been received by this vEdge: ~~~ show omp routes show ip route ~~~ On the SSH connection to vEdge, execute the below commands to verify that IPSec tunnels are setup to remote vEdges. BFD is enabled by default on the IPSec tunnels: ~~~ show bfd session show bfd session | tab ~~~ Below screenshot shows the output of above command confirming that IPSec tunnels on both WAN links are setup to DC and BR2: Step 2: Verify IPSec tunnels on BR2 You can launch SSH to vEdge in Branch-2 by using MPutty client on the Remote Desktop: SSH to OOB Management IP address of BR2-vEdge : 198.18.134.106 Use credentials of admin and admin for authentication Note: if admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 On the SSH connection to vEdge, execute the below commands to verify that OMP routes have been received by this vEdge: ~~~ show omp routes show ip route ~~~ On the SSH connection to vEdge, execute the below commands to verify that IPSec tunnels are setup to remote vEdges. BFD is enabled by default on the IPSec tunnels: ~~~ show bfd session show bfd session | tab ~~~ Below screenshot shows the output of above command confirming that IPSec tunnels on both WAN links are setup to DC and BR1: Step 1: Verify IPSec tunnels on DC You can launch SSH to vEdge in Branch-1 by using MPutty client on the Remote Desktop: SSH to OOB Management IP address of BR1-vEdge : 198.18.134.100 Use credentials of admin and admin for authentication Note: if admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 On the SSH connection to vEdge, execute the below commands to verify that OMP routes have been received by this vEdge: ~~~ show omp routes show ip route ~~~ On the SSH connection to vEdge, execute the below commands to verify that IPSec tunnels are setup to remote vEdges. BFD is enabled by default on the IPSec tunnels: ~~~ show bfd session show bfd session | tab ~~~ Below screenshot shows the output of above command confirming that IPSec tunnels on both WAN links are setup to BR1 and BR2: -- This concludes this task to verify the full mesh topology","title":"Task 4 - Full Mesh"},{"location":"Task4-Full-Mesh/#task-4-full-mesh","text":"This task will walk through the steps to verify the full mesh VPN topology on the SD-WAN Fabric. As per previous steps of onboarding the vEdges has been performed. By default all the vEdges in SD-WAN Fabric will create a full mesh IPSec tunnels. Pre-requisite: SDWAN controllers and 3 vEdges (in Branches & DC) must be fully operational. If those are not installed (or not operational) then please complete the previous Tasks first.","title":"Task 4 - Full Mesh"},{"location":"Task4-Full-Mesh/#step-1-verify-ipsec-tunnels-on-br1","text":"You can launch SSH to vEdge in Branch-1 by using MPutty client on the Remote Desktop: SSH to OOB Management IP address of BR1-vEdge : 198.18.134.105 Use credentials of admin and admin for authentication Note: if admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 On the SSH connection to vEdge, execute the below commands to verify that OMP routes have been received by this vEdge: ~~~ show omp routes show ip route ~~~ On the SSH connection to vEdge, execute the below commands to verify that IPSec tunnels are setup to remote vEdges. BFD is enabled by default on the IPSec tunnels: ~~~ show bfd session show bfd session | tab ~~~ Below screenshot shows the output of above command confirming that IPSec tunnels on both WAN links are setup to DC and BR2:","title":"Step 1: Verify IPSec tunnels on BR1"},{"location":"Task4-Full-Mesh/#step-2-verify-ipsec-tunnels-on-br2","text":"You can launch SSH to vEdge in Branch-2 by using MPutty client on the Remote Desktop: SSH to OOB Management IP address of BR2-vEdge : 198.18.134.106 Use credentials of admin and admin for authentication Note: if admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 On the SSH connection to vEdge, execute the below commands to verify that OMP routes have been received by this vEdge: ~~~ show omp routes show ip route ~~~ On the SSH connection to vEdge, execute the below commands to verify that IPSec tunnels are setup to remote vEdges. BFD is enabled by default on the IPSec tunnels: ~~~ show bfd session show bfd session | tab ~~~ Below screenshot shows the output of above command confirming that IPSec tunnels on both WAN links are setup to DC and BR1:","title":"Step 2: Verify IPSec tunnels on BR2"},{"location":"Task4-Full-Mesh/#step-1-verify-ipsec-tunnels-on-dc","text":"You can launch SSH to vEdge in Branch-1 by using MPutty client on the Remote Desktop: SSH to OOB Management IP address of BR1-vEdge : 198.18.134.100 Use credentials of admin and admin for authentication Note: if admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 On the SSH connection to vEdge, execute the below commands to verify that OMP routes have been received by this vEdge: ~~~ show omp routes show ip route ~~~ On the SSH connection to vEdge, execute the below commands to verify that IPSec tunnels are setup to remote vEdges. BFD is enabled by default on the IPSec tunnels: ~~~ show bfd session show bfd session | tab ~~~ Below screenshot shows the output of above command confirming that IPSec tunnels on both WAN links are setup to BR1 and BR2: -- This concludes this task to verify the full mesh topology","title":"Step 1: Verify IPSec tunnels on DC"},{"location":"Task5-VPN creations/","text":"Task 5 - VPN on the Fabric This task will walk through the steps to create full mesh VPN on the SD-WAN Fabric. Hence the traffic on these VPNs can be passed on the SDWAN Fabric keeping the end-to-end segmentation. We will create VPN number 10 in this exercise. This VPN will exist on vEdges in BR1 and BR2 Branches as well as on Data Center (DC). This configuration of vEdge can be done via Feature Templates or by using CLI Template on the vManage. We will use CLI Template of the vEdge for this lab. To provide differentiation, two separate CLI Templates will be created for vEdges in DC and Branches. SDWAN Lab Topology The logical topology of VPN number 10 is shown in below figure: Pre-requisite: SDWAN controllers and 3 vEdges (in Branches & DC) must be fully operational. If those are not installed (or not operational) then please complete the previous Tasks first. Step 1: Create VPN 10 on Branch 1 (BR1) A new VPN (number 10) will be used to pass traffic between Applications between Branches, the Data Centers and subsequently to the application hosted on AWS Cloud. Log on to the vManage from a web browser (if not already open) and use credentials of admin and admin : ~~~ https://198.18.1.10 ~~~ Enter the admin credentials for authentication On the vManage GUI, navigate to Configuration > Templates > Device . Then Select the CLI template named \"CL-branch-1-vedge\" . Next, Click on the three dots on right-side of \"CL-branch-1-vedge\" > Edit as shown in below screenshot. Edit option will allow you to add additional configurations in this template. Scroll all the way to the end of existing template, Then you can add (copy & paste will work) the below configuration at the end of the exiting template, Do not make any other changes to existing configurations in this template ~~~ vpn 10 name AppVPN interface ge0/3 ip address {{vpn10-IP-address}}/24 no shutdown ~~~ Note : above configuration must include {{vpn10-IP-address}} syntax. Double curly brackets are interpreted as variable and this will be used to fill out IP addresses of each vEdge in the branch in subsequent bullet (during deployment of template). Important Note : Be very careful in making configuration changes on vEdge. Do NOT change any configuration of VPN 512 as it can result in loss of connectivity to the vEdge - which can not be restored. You will have to start the lab again from Task #1 if you loose network connectivity to a vEdge. After adding above configuration to this Template, Click on Update button. On the next screen, enter the ge0/3 IP address of 10.3.0.3 for Branch-1 in the respective field and Click the Next button. Below screenshot shows this: On the next screen, Select the BR1-vEdge under the Device list section (left part of screen). Then Select both \"Config Preview\" and \"Config Diff\" options to verify that VPN 10 related configurations are added to this vEdge, and no changes to VPN 512 (or other interfaces) are done. Important Note : Be very careful in making configuration changes on vEdge. Do NOT change any configuration of VPN 512 as it can result in loss of connectivity to the vEdge - which can not be restored. You will have to start the lab again from Task #1 if you loose network connectivity to a vEdge. Once you have verifed the config changes Click on Configure Devices button on the lower section of screen, as shown in below screenshot: This completes the configuration of VPN 10 on BR1-vEdge Step 2: Validate VPN 10 config on Branch 1 In this step we will confirm that BR1-vEdge has been provisioned for VPN #10 (as executed in the previous step). There are multiple ways to access the configuration of vEdge, such as: Direct SSH to Management IP address (VPN 512) of the vEdges Initiate SSH to vEdges from the vManage GUI Access the Running configuration of vEdges within vManage GUI by clicking on Configuration > Devices > Click on three dots on the right (next to the name) of vEdge and click Running Configuration from the drop-down menu Below, we will use direct SSH mechanism to verify the configurtions: You can launch SSH to vEdge in Branch-1 by using MPutty client on the Remote Desktop: SSH to OOB Management IP address of BR1-vEdge : 198.18.134.105 Use credentials of admin and admin for authentication Note: if admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 On the SSH connection to vEdge, execute the below commands to: verify that VPN 10 has been successfully configured by vManage verify vEdge has connectivity to local device (on the LAN of vEdge) in VPN 10 by initiating a ping to a host on LAN : ~~~ show run vpn 10 ping vpn 10 10.3.0.10 ~~~ Note: you can enter Control-C (Ctrl-C) to stop the ping Below screenshot shows the output of above command: This successfully adds VPN 10 to Branch 1 Step 3: Create VPN 10 on Branch 2 (BR2) Now lets create VPN 10 on BR2 vEdge. You will use the above procedure in Step 1 & Step 2 to create & verify VPN 10 on vEdge in Branch-2 (BR2-vEdge). But in case of vEdge in Branch-2 you will need to adapt to below changes: vEdge in Branch-2, with hostname BR2-vEdge, uses the CLI Template named: CL-BR2-vEdge1 . Hence you need to modify this template to add VPN 10 configurations VPN 10 will be configured on port ge0/2 on vEdge in Branch-2. Hence the below vpn 10 configuration will be added at the end of CLI template named CL-BR2-vEdge1 : ~~~ vpn 10 name AppVPN interface ge0/2 ip address {{vpn10-IP-address}}/24 no shutdown ~~~ Important Note : Be very careful in making configuration changes on vEdge. Do NOT change any other configuration on the template. Changing other config, such as VPN 512 related configs, can result in loss of connectivity to the vEdge - which can not be restored. You will have to start the lab again from Task #1 if you loose network connectivity to a vEdge. vEgde in Branch-2 will be configured for IP address of 10.4.254.10 on the ge0/2 Once the new template with VPN10 has been deployed then: Using MPutty , initiate a SSH connection to BR2-vEdge , and execute the below commands to: verify that VPN 10 has been successfully configured by vManage verify vEdge has connectivity to local device (on the LAN of vEdge) in VPN 10 by initiating a ping to a host on LAN: ~~~ show run vpn 10 ping vpn 10 10.4.254.254 ~~~ This will successfully add VPN 10 to vEdge in Branch 2. Below screenshot shows a successful test for BR2-vEdge: Step 4: Verify VPN 10 routing on BR1 & BR2 Now we can verify the IP connectivity between vEdge in Branch-1 and Branch-2 on the VPN 10. Using MPutty, initiate SSH connections to BR1-vEdge and BR2-vEdge Execute below commands on both BR1-vEdge and BR2-vEdge ~~~ show ip route show ip route vpn 10 show omp routes show omp routes vpn 10 ~~~ You should verify that each vEdge has learned the LAN segment IP address of remote vEdge (within VPN 10) Below screenshot shows an example of partial execution of above commands from BR2-vEdge: This confirms that VPN 10 is routed properly between BR1 and BR2 Step 5: Create VPN 10 on Data Center (DC) Now lets configure this new VPN (number 1) on the vEdge in Data Center (DC). Log on to the vManage from a web browser (if not already open) and use credentials of admin and admin : ~~~ https://198.18.1.10 ~~~ Enter the admin/admin credentials for authentication On the vManage GUI, navigate to Configuration > Templates Then from Device tab, Select the CLI template named \"CL-DC-vedge\" . Next, Click on the three dots ... on right-side of \"CL-DC-vedge\" and Select Edit from the drop downmenu Next the configuration below at the end of the template. ~~~ ! vpn 10 interface ge0/0 ip address 198.18.133.211/18 no shutdown ! ~~~ After adding above configuration to Template, Click on Update > Next > Complete * Subsequently, confirm in the Tasks that the configurations are pushed to DC1-vEdge1 Step 6: Validate VPN 10 config on DC In this step we will confirm that DC1-vEdge has been provisioned for VPN #10 (as executed in the previous step). There are multiple ways to access the configuration of vEdge, such as: Direct SSH to Management IP address (VPN 512) of the vEdges Initiate SSH to vEdges from the vManage GUI Access the Running configuration of vEdges within vManage GUI by clicking on Configuration > Devices > Click on three dots on the right (next to the name) of vEdge and click Running Configuration from the drop-down menu Below, we will use direct SSH mechanism to verify the configurtions: You can launch SSH to vEdge in DC1 by using MPutty client on the Remote Desktop: SSH to OOB Management IP address of BR1-vEdge : 198.18.134.100 Use credentials of admin and admin for authentication Note: if admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 On the SSH connection to vEdge, execute the below commands: ~~~ show run vpn 10 ping vpn 10 198.18.128.1 ~~~ Note: you can enter Control-C (Ctrl-C) to stop the ping These commands verify that: VPN 10 has been successfully configured by vManage, vEdge has connectivity to local device (on the LAN of vEdge) in VPN 10 by initiating a ping to a host on LAN Below screenshot shows the output of above command: This successfully adds VPN 10 to Branch 1","title":"Task 5 - VPN on the Fabric"},{"location":"Task5-VPN creations/#task-5-vpn-on-the-fabric","text":"This task will walk through the steps to create full mesh VPN on the SD-WAN Fabric. Hence the traffic on these VPNs can be passed on the SDWAN Fabric keeping the end-to-end segmentation. We will create VPN number 10 in this exercise. This VPN will exist on vEdges in BR1 and BR2 Branches as well as on Data Center (DC). This configuration of vEdge can be done via Feature Templates or by using CLI Template on the vManage. We will use CLI Template of the vEdge for this lab. To provide differentiation, two separate CLI Templates will be created for vEdges in DC and Branches.","title":"Task 5 - VPN on the Fabric"},{"location":"Task5-VPN creations/#sdwan-lab-topology","text":"The logical topology of VPN number 10 is shown in below figure: Pre-requisite: SDWAN controllers and 3 vEdges (in Branches & DC) must be fully operational. If those are not installed (or not operational) then please complete the previous Tasks first.","title":"SDWAN Lab Topology"},{"location":"Task5-VPN creations/#step-1-create-vpn-10-on-branch-1-br1","text":"A new VPN (number 10) will be used to pass traffic between Applications between Branches, the Data Centers and subsequently to the application hosted on AWS Cloud. Log on to the vManage from a web browser (if not already open) and use credentials of admin and admin : ~~~ https://198.18.1.10 ~~~ Enter the admin credentials for authentication On the vManage GUI, navigate to Configuration > Templates > Device . Then Select the CLI template named \"CL-branch-1-vedge\" . Next, Click on the three dots on right-side of \"CL-branch-1-vedge\" > Edit as shown in below screenshot. Edit option will allow you to add additional configurations in this template. Scroll all the way to the end of existing template, Then you can add (copy & paste will work) the below configuration at the end of the exiting template, Do not make any other changes to existing configurations in this template ~~~ vpn 10 name AppVPN interface ge0/3 ip address {{vpn10-IP-address}}/24 no shutdown ~~~ Note : above configuration must include {{vpn10-IP-address}} syntax. Double curly brackets are interpreted as variable and this will be used to fill out IP addresses of each vEdge in the branch in subsequent bullet (during deployment of template). Important Note : Be very careful in making configuration changes on vEdge. Do NOT change any configuration of VPN 512 as it can result in loss of connectivity to the vEdge - which can not be restored. You will have to start the lab again from Task #1 if you loose network connectivity to a vEdge. After adding above configuration to this Template, Click on Update button. On the next screen, enter the ge0/3 IP address of 10.3.0.3 for Branch-1 in the respective field and Click the Next button. Below screenshot shows this: On the next screen, Select the BR1-vEdge under the Device list section (left part of screen). Then Select both \"Config Preview\" and \"Config Diff\" options to verify that VPN 10 related configurations are added to this vEdge, and no changes to VPN 512 (or other interfaces) are done. Important Note : Be very careful in making configuration changes on vEdge. Do NOT change any configuration of VPN 512 as it can result in loss of connectivity to the vEdge - which can not be restored. You will have to start the lab again from Task #1 if you loose network connectivity to a vEdge. Once you have verifed the config changes Click on Configure Devices button on the lower section of screen, as shown in below screenshot: This completes the configuration of VPN 10 on BR1-vEdge","title":"Step 1: Create VPN 10 on Branch 1 (BR1)"},{"location":"Task5-VPN creations/#step-2-validate-vpn-10-config-on-branch-1","text":"In this step we will confirm that BR1-vEdge has been provisioned for VPN #10 (as executed in the previous step). There are multiple ways to access the configuration of vEdge, such as: Direct SSH to Management IP address (VPN 512) of the vEdges Initiate SSH to vEdges from the vManage GUI Access the Running configuration of vEdges within vManage GUI by clicking on Configuration > Devices > Click on three dots on the right (next to the name) of vEdge and click Running Configuration from the drop-down menu Below, we will use direct SSH mechanism to verify the configurtions: You can launch SSH to vEdge in Branch-1 by using MPutty client on the Remote Desktop: SSH to OOB Management IP address of BR1-vEdge : 198.18.134.105 Use credentials of admin and admin for authentication Note: if admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 On the SSH connection to vEdge, execute the below commands to: verify that VPN 10 has been successfully configured by vManage verify vEdge has connectivity to local device (on the LAN of vEdge) in VPN 10 by initiating a ping to a host on LAN : ~~~ show run vpn 10 ping vpn 10 10.3.0.10 ~~~ Note: you can enter Control-C (Ctrl-C) to stop the ping Below screenshot shows the output of above command: This successfully adds VPN 10 to Branch 1","title":"Step 2: Validate VPN 10 config on Branch 1"},{"location":"Task5-VPN creations/#step-3-create-vpn-10-on-branch-2-br2","text":"Now lets create VPN 10 on BR2 vEdge. You will use the above procedure in Step 1 & Step 2 to create & verify VPN 10 on vEdge in Branch-2 (BR2-vEdge). But in case of vEdge in Branch-2 you will need to adapt to below changes: vEdge in Branch-2, with hostname BR2-vEdge, uses the CLI Template named: CL-BR2-vEdge1 . Hence you need to modify this template to add VPN 10 configurations VPN 10 will be configured on port ge0/2 on vEdge in Branch-2. Hence the below vpn 10 configuration will be added at the end of CLI template named CL-BR2-vEdge1 : ~~~ vpn 10 name AppVPN interface ge0/2 ip address {{vpn10-IP-address}}/24 no shutdown ~~~ Important Note : Be very careful in making configuration changes on vEdge. Do NOT change any other configuration on the template. Changing other config, such as VPN 512 related configs, can result in loss of connectivity to the vEdge - which can not be restored. You will have to start the lab again from Task #1 if you loose network connectivity to a vEdge. vEgde in Branch-2 will be configured for IP address of 10.4.254.10 on the ge0/2 Once the new template with VPN10 has been deployed then: Using MPutty , initiate a SSH connection to BR2-vEdge , and execute the below commands to: verify that VPN 10 has been successfully configured by vManage verify vEdge has connectivity to local device (on the LAN of vEdge) in VPN 10 by initiating a ping to a host on LAN: ~~~ show run vpn 10 ping vpn 10 10.4.254.254 ~~~ This will successfully add VPN 10 to vEdge in Branch 2. Below screenshot shows a successful test for BR2-vEdge:","title":"Step 3: Create VPN 10 on Branch 2 (BR2)"},{"location":"Task5-VPN creations/#step-4-verify-vpn-10-routing-on-br1-br2","text":"Now we can verify the IP connectivity between vEdge in Branch-1 and Branch-2 on the VPN 10. Using MPutty, initiate SSH connections to BR1-vEdge and BR2-vEdge Execute below commands on both BR1-vEdge and BR2-vEdge ~~~ show ip route show ip route vpn 10 show omp routes show omp routes vpn 10 ~~~ You should verify that each vEdge has learned the LAN segment IP address of remote vEdge (within VPN 10) Below screenshot shows an example of partial execution of above commands from BR2-vEdge: This confirms that VPN 10 is routed properly between BR1 and BR2","title":"Step 4: Verify VPN 10 routing on BR1 &amp; BR2"},{"location":"Task5-VPN creations/#step-5-create-vpn-10-on-data-center-dc","text":"Now lets configure this new VPN (number 1) on the vEdge in Data Center (DC). Log on to the vManage from a web browser (if not already open) and use credentials of admin and admin : ~~~ https://198.18.1.10 ~~~ Enter the admin/admin credentials for authentication On the vManage GUI, navigate to Configuration > Templates Then from Device tab, Select the CLI template named \"CL-DC-vedge\" . Next, Click on the three dots ... on right-side of \"CL-DC-vedge\" and Select Edit from the drop downmenu Next the configuration below at the end of the template. ~~~ ! vpn 10 interface ge0/0 ip address 198.18.133.211/18 no shutdown ! ~~~ After adding above configuration to Template, Click on Update > Next > Complete * Subsequently, confirm in the Tasks that the configurations are pushed to DC1-vEdge1","title":"Step 5: Create VPN 10 on Data Center (DC)"},{"location":"Task5-VPN creations/#step-6-validate-vpn-10-config-on-dc","text":"In this step we will confirm that DC1-vEdge has been provisioned for VPN #10 (as executed in the previous step). There are multiple ways to access the configuration of vEdge, such as: Direct SSH to Management IP address (VPN 512) of the vEdges Initiate SSH to vEdges from the vManage GUI Access the Running configuration of vEdges within vManage GUI by clicking on Configuration > Devices > Click on three dots on the right (next to the name) of vEdge and click Running Configuration from the drop-down menu Below, we will use direct SSH mechanism to verify the configurtions: You can launch SSH to vEdge in DC1 by using MPutty client on the Remote Desktop: SSH to OOB Management IP address of BR1-vEdge : 198.18.134.100 Use credentials of admin and admin for authentication Note: if admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 On the SSH connection to vEdge, execute the below commands: ~~~ show run vpn 10 ping vpn 10 198.18.128.1 ~~~ Note: you can enter Control-C (Ctrl-C) to stop the ping These commands verify that: VPN 10 has been successfully configured by vManage, vEdge has connectivity to local device (on the LAN of vEdge) in VPN 10 by initiating a ping to a host on LAN Below screenshot shows the output of above command: This successfully adds VPN 10 to Branch 1","title":"Step 6: Validate VPN 10 config on DC"},{"location":"Task6-OSPF_service/","text":"Task 6 - OSPF Peering This Task will walk through the steps to perform OSPF peering of the vEdge in Branch 2 on the LAN. The traffic on the LAN is referred to as Service Side on vEdge. The OSPF peering will be done for VPN 10 in this exercise. VPN 10 already exists in BR1 and BR2. Cisco CSRv exists on the LAN side of BR2 and this CSRv has already been configured with appropriate configurations for OSPF peering. SDWAN Lab Topology The logical topology of this branch is shown in below figure: Pre-requisite: SDWAN controllers and vEdges (in Branches & DC) must be fully operational. If those are not installed (or not operational) then please complete the previous Tasks first. Step 1: Adding OSPF config in BR2 In this step we will configure OSPF area 0 configurations on the vEdge and also validate that the configurations are applied properly. Log on to the vManage from a web browser (if not already open) and use credentials of admin and admin : ~~~ https://198.18.1.10 ~~~ > **Note:** if `admin/admin` credentials do not work then you may try using `cisco/cisco` or `cisco1/cisco1` On the vManage GUI, navigate to Configuration > Templates > Device . We will make a copy of the existing CLI Template and edit the new Template to add OSPF configurations. Click on the three dots ... on right-side of \"CL-BR2-vEdge1\" > Copy . Next: Name the new template as CL-BR2-vEdge1-ospf You may modify description to state: Branch2 vEdge1 configs with ospf Then Select the newly CLI template named \"CL-BR2-vedge-ospf\" . And, Click on the three dots ... on right-side of \"CL-BR2-vedge-ospf\" and Select Edit from the drop-down menu. Edit option will allow you to add additional configurations in this template as per below: Scroll all the way to the end of existing template, Then you can add (copy & paste) the below configuration at the end of the exiting template, Note: Do not make any other changes to existing configurations in this template ~~~ vpn 10 router ospf default-information originate redistribute omp area 0 interface ge0/2 exit exit ~~~ Note : above configs perform OSPF configuration as well as redistribution of OMP routes into OSPF with \"redistribute omp\" command Click Update to save the new configurations in the template. Now Attach this new template (named: \"CL-BR2-vEdge1-ospf\") to BR2-vEdge by: Click on the three dots ... on right-side of \"CL-BR2-vEdge1\" Select Attach from dropdown menu Then on next screen, Select BR2-vEdge with System IP of 10.4.0.1 in the Available devices Click the Right Arrow . At this point BR2-vEdge will move to the Selected Devices then Click on Attach On the subsequent screen, Click the Next button On the next screen, Click on BR2-vEdge (with uuid of ddd801b2-8cbe-4394-abd1-3b71e39886e3 ) on left section and Click on Config Preview and Config Diff options on the right side of window to confirm correct configurations are pushed to this BR2-vEdge. Important Note : Be very careful in making configuration changes on vEdge. Do NOT change any configuration of VPN 512 as it can result in loss of connectivity to the vEdge - which can not be restored. You will have to start the lab again from Task #1 if you loose network connectivity to a vEdge. Next Click on the Configure Devices button on bottom of the screen. On the subsequent screen verify that the template is attached successfully to BR2-vEdge Step 2: Validate OSPF in BR2 Now lets confirm the OSPF configurations are pushed to vEdge and routes are learned from the OSPF neighbor. You may access BR2-vEdge by direct SSH using the Mputty client and initiate SSH to BR2-vEdge with IP address of 198.18.134.106 . Or you may access it the main menu of vManage GUI by navigating to Tools > SSH Terminal . Make sure Device Group states All and Click on the BR2-vEdge . Log into vEdge by using credentials: Login name: admin Password: admin Note: if admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 Next, execute the below commands to verify that OSPF configuration on the vEdge-1 in Branch-1: ~~~ show run vpn 10 show ospf neighbor show ospf routes show ip routes vpn 10 ~~~ Below screenshot shows the output of of above commands on BR2-vEdge: From the output of above commands, confirm that vEdge-1 in Branch #1 shows that: OSPF configurations under VPN 10 exist on the vEdge, OSPF neighbor with the 10.4.254.254 exists, below OSPF routes are learned from this neighbor: prefix: 10.4.0.0/24 prefix: 10.4.254.0/24 these OSPF routes are installed in the routing table. Step 3: Verify OSPF routes redistribution In the previous step, we configured the OSPF peering between BR2-vEdge and a neigbouring router on the LAN of this Branch2. Now lets confirm that OSPF routes (learned on BR2) are redistributed via OMP towards BR1. Using Mputty client on remote desktop, initiate a SSH session to BR1-vEdge (with IP address of 198.18.134.105 ). Execute below commands on BR1-vEdge to verify that OSPF routes are learned from BR2: ~~~ show ip routes vpn 10 show omp routes ~~~ Below screenshot shows the output of of above commands on BR1-vEdge: From the output of above commands, verify that OSPF routes of 10.4.0.0 has been redistributed via OMP by BR2-vEdge On BR1-vEdge , we can get more details (attributes learned via OMP) about the routes by using below command: ~~~ show omp routes vpn 10 10.4.0.0/24 detail ~~~ Below screenshot shows the output of of above commands on BR1-vEdge: From the output of above command you can verify the attributes for 10.4.0.0/24 route such as: origin-proto is OSPF-intra-area (so route is originated by OSPF) tloc entries show: system IP of 10.4.0.1 , color of mpls & private1 . This means that the route is learned over both WAN links (identified by color). In contrast you may run below command to see the origin-proto for route 10.4.254.0 : ~~~ show omp routes vpn 10 10.4.254.0/24 detail ~~~ Does the above output 10.4.254.0 makes sense? It basically shows that the route was directly connected on BR2!","title":"Task 6 - OSPF Peering"},{"location":"Task6-OSPF_service/#task-6-ospf-peering","text":"This Task will walk through the steps to perform OSPF peering of the vEdge in Branch 2 on the LAN. The traffic on the LAN is referred to as Service Side on vEdge. The OSPF peering will be done for VPN 10 in this exercise. VPN 10 already exists in BR1 and BR2. Cisco CSRv exists on the LAN side of BR2 and this CSRv has already been configured with appropriate configurations for OSPF peering.","title":"Task 6 - OSPF Peering"},{"location":"Task6-OSPF_service/#sdwan-lab-topology","text":"The logical topology of this branch is shown in below figure: Pre-requisite: SDWAN controllers and vEdges (in Branches & DC) must be fully operational. If those are not installed (or not operational) then please complete the previous Tasks first.","title":"SDWAN Lab Topology"},{"location":"Task6-OSPF_service/#step-1-adding-ospf-config-in-br2","text":"In this step we will configure OSPF area 0 configurations on the vEdge and also validate that the configurations are applied properly. Log on to the vManage from a web browser (if not already open) and use credentials of admin and admin : ~~~ https://198.18.1.10 ~~~ > **Note:** if `admin/admin` credentials do not work then you may try using `cisco/cisco` or `cisco1/cisco1` On the vManage GUI, navigate to Configuration > Templates > Device . We will make a copy of the existing CLI Template and edit the new Template to add OSPF configurations. Click on the three dots ... on right-side of \"CL-BR2-vEdge1\" > Copy . Next: Name the new template as CL-BR2-vEdge1-ospf You may modify description to state: Branch2 vEdge1 configs with ospf Then Select the newly CLI template named \"CL-BR2-vedge-ospf\" . And, Click on the three dots ... on right-side of \"CL-BR2-vedge-ospf\" and Select Edit from the drop-down menu. Edit option will allow you to add additional configurations in this template as per below: Scroll all the way to the end of existing template, Then you can add (copy & paste) the below configuration at the end of the exiting template, Note: Do not make any other changes to existing configurations in this template ~~~ vpn 10 router ospf default-information originate redistribute omp area 0 interface ge0/2 exit exit ~~~ Note : above configs perform OSPF configuration as well as redistribution of OMP routes into OSPF with \"redistribute omp\" command Click Update to save the new configurations in the template. Now Attach this new template (named: \"CL-BR2-vEdge1-ospf\") to BR2-vEdge by: Click on the three dots ... on right-side of \"CL-BR2-vEdge1\" Select Attach from dropdown menu Then on next screen, Select BR2-vEdge with System IP of 10.4.0.1 in the Available devices Click the Right Arrow . At this point BR2-vEdge will move to the Selected Devices then Click on Attach On the subsequent screen, Click the Next button On the next screen, Click on BR2-vEdge (with uuid of ddd801b2-8cbe-4394-abd1-3b71e39886e3 ) on left section and Click on Config Preview and Config Diff options on the right side of window to confirm correct configurations are pushed to this BR2-vEdge. Important Note : Be very careful in making configuration changes on vEdge. Do NOT change any configuration of VPN 512 as it can result in loss of connectivity to the vEdge - which can not be restored. You will have to start the lab again from Task #1 if you loose network connectivity to a vEdge. Next Click on the Configure Devices button on bottom of the screen. On the subsequent screen verify that the template is attached successfully to BR2-vEdge","title":"Step 1: Adding OSPF config in BR2"},{"location":"Task6-OSPF_service/#step-2-validate-ospf-in-br2","text":"Now lets confirm the OSPF configurations are pushed to vEdge and routes are learned from the OSPF neighbor. You may access BR2-vEdge by direct SSH using the Mputty client and initiate SSH to BR2-vEdge with IP address of 198.18.134.106 . Or you may access it the main menu of vManage GUI by navigating to Tools > SSH Terminal . Make sure Device Group states All and Click on the BR2-vEdge . Log into vEdge by using credentials: Login name: admin Password: admin Note: if admin/admin credentials do not work then you may try using cisco/cisco or cisco1/cisco1 Next, execute the below commands to verify that OSPF configuration on the vEdge-1 in Branch-1: ~~~ show run vpn 10 show ospf neighbor show ospf routes show ip routes vpn 10 ~~~ Below screenshot shows the output of of above commands on BR2-vEdge: From the output of above commands, confirm that vEdge-1 in Branch #1 shows that: OSPF configurations under VPN 10 exist on the vEdge, OSPF neighbor with the 10.4.254.254 exists, below OSPF routes are learned from this neighbor: prefix: 10.4.0.0/24 prefix: 10.4.254.0/24 these OSPF routes are installed in the routing table.","title":"Step 2: Validate OSPF in BR2"},{"location":"Task6-OSPF_service/#step-3-verify-ospf-routes-redistribution","text":"In the previous step, we configured the OSPF peering between BR2-vEdge and a neigbouring router on the LAN of this Branch2. Now lets confirm that OSPF routes (learned on BR2) are redistributed via OMP towards BR1. Using Mputty client on remote desktop, initiate a SSH session to BR1-vEdge (with IP address of 198.18.134.105 ). Execute below commands on BR1-vEdge to verify that OSPF routes are learned from BR2: ~~~ show ip routes vpn 10 show omp routes ~~~ Below screenshot shows the output of of above commands on BR1-vEdge: From the output of above commands, verify that OSPF routes of 10.4.0.0 has been redistributed via OMP by BR2-vEdge On BR1-vEdge , we can get more details (attributes learned via OMP) about the routes by using below command: ~~~ show omp routes vpn 10 10.4.0.0/24 detail ~~~ Below screenshot shows the output of of above commands on BR1-vEdge: From the output of above command you can verify the attributes for 10.4.0.0/24 route such as: origin-proto is OSPF-intra-area (so route is originated by OSPF) tloc entries show: system IP of 10.4.0.1 , color of mpls & private1 . This means that the route is learned over both WAN links (identified by color). In contrast you may run below command to see the origin-proto for route 10.4.254.0 : ~~~ show omp routes vpn 10 10.4.254.0/24 detail ~~~ Does the above output 10.4.254.0 makes sense? It basically shows that the route was directly connected on BR2!","title":"Step 3: Verify OSPF routes redistribution"}]}